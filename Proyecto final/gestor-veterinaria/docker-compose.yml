services:
  db:
    image: postgres:13-alpine
    container_name: mascotas_db_container
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: mascotas_backend_container
    restart: unless-stopped
    environment:
      - PORT=3001
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - CORS_ORIGIN=http://localhost
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./backend:/app
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: mascotas_frontend_container
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3000
      - WDS_SOCKET_PATH=/ws
      - FAST_REFRESH=true
      - REACT_APP_API_URL=http://localhost/api
    depends_on:
      - backend

  redis:
    image: redis:7-alpine
    container_name: mascotas_redis_container
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mascotas_pgadmin_container
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=True
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      #- ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgadmin4/pgpass:ro
    ports:
      - "5050:80"
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    container_name: mascotas_nginx_container
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend

volumes:
  db_data:
  redis_data:
  pgadmin_data:
